{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9f14fd8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value)\r\n    \r\n  }\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault()\r\n    setTodos([\r\n      ...todos, {text: inputText, completed: false, id: Math.random() * 1000}\r\n    ])\r\n    setInputText('')\r\n  }\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value)\r\n  }\r\n  return (\r\n    <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\" >\r\n        <i className=\"fas fa-plus-square\" />\r\n      </button>\r\n      <div className=\"select\" >\r\n        <select onClick={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\" >All</option>\r\n          <option value=\"completed\" >completed</option>\r\n          <option value=\"uncompleted\" >uncompleted</option>\r\n          \r\n        </select>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter(el => el.id !== todo.id))\r\n  }\r\n  const completeHandler = () => {\r\n    setTodos(todos.map(item => {\r\n      if(item.id === todo.id){\r\n        return{\r\n          ...item, completed: !item.completed\r\n        }\r\n      }\r\n      return item\r\n    }))\r\n  }\r\n  return (\r\n    <div className=\"todo\" >\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`} >{text}</li>\r\n      <button onClick={completeHandler} className=\"complete-btn\" ><i className=\"fas fa-check\" /></button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\"> <i  className=\"fas fa-trash\" /></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n    return (\r\n    <div className=\"todo-container\" >\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n        <Todo key={todo.id} text={todo.text} todo={todo} todos={todos} setTodos={setTodos} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList  from \"./components/TodoList\";\n\nfunction App() {\n\n\n  const  [inputText, setInputText] = useState (\"\")\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState(\"all\")\n  const [filteredTodos, setFilteredTodos] = useState ([])\n\n  useEffect(() => {\n    getLocalTodos()\n  }, [])\n\n  useEffect(() => {\n    filterHandler()\n    saveLocalTodos()\n  }, [todos, status])\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter((todo ) => todo.completed === true))\n        break;\n      \n      case 'uncompleted':\n        setFilteredTodos(todos.filter((todo ) => todo.completed === false))\n        break;\n      \n      default:\n      setFilteredTodos(todos)\n        break;\n    }\n  }\n  const saveLocalTodos = () => {\n    if(localStorage.getItem('todos') ===null){\n      localStorage.setItem('todos', JSON.stringify([]))\n    }else{\n      localStorage.setItem('todos', JSON.stringify(todos))\n    }\n  }\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') ===null){\n      localStorage.setItem('todos', JSON.stringify([]))\n    }else{\n      let todoLocal = JSON.parse( localStorage.getItem('todos'))\n      setTodos(todoLocal)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h2>Todo List</h2>\n      </header>\n      <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus} />\n      <TodoList  filteredTodos={filteredTodos} todos={todos} setTodos={setTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}